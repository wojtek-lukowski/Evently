{"version":3,"sources":["Event.js","EventList.js","Alert.js","CitySearch.js","NumberOfEvents.js","mock-data.js","api.js","Header.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["Event","state","collapsed","expandEvent","event","setState","this","props","className","summary","width","height","viewBox","fill","xmlns","d","start","dateTime","stroke","location","onClick","description","Component","EventList","events","map","id","Alert","getStyle","color","text","style","InfoAlert","ErrorAlert","WarningAlert","CitySearch","query","suggestions","showSuggestions","undefined","handleInputChanged","value","target","locations","filter","toUpperCase","indexOf","length","infoText","handleItemClicked","suggestion","updateEvents","type","placeholder","onFocus","onChange","display","NumberOfEvents","numberOfEvents","setNumber","min","max","step","e","mockData","extractLocations","Set","checkToken","accessToken","a","fetch","then","res","json","catch","error","result","removeQuery","window","history","pushState","pathname","newurl","protocol","host","getToken","code","encodeCode","encodeURIComponent","access_token","localStorage","setItem","getEvents","NProgress","href","startsWith","done","navigator","onLine","getItem","JSON","parse","getAccessToken","token","url","axios","get","data","stringify","tokenCheck","removeItem","searchParams","URLSearchParams","search","results","authUrl","Header","App","currentLocation","locationEvents","slice","newNumber","parseInt","mounted","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","atatus","install","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","headers","response","contentType","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.7b83eee2.chunk.js","sourcesContent":["import React, { Component } from 'react';\nclass Event extends Component {\n  state = {\n    collapsed: true\n  }\n\n  expandEvent = (event) => {\n    const checkEvent = this.state.collapsed;\n    \n    if (checkEvent) {\n      this.setState({\n        collapsed: false\n      })\n    } else {\n      this.setState({\n        collapsed: true\n      })\n    }\n  };\n\n  render() {\n    const { event } = this.props;\n    const { collapsed } = this.state;\n\n    return (\n      <div className=\"event\">\n        \n        <div className=\"event-summary\">\n          <h3>{event.summary}</h3></div>\n        <div className=\"event-time\">\n        <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n          <path d=\"M12 2C6.486 2 2 6.486 2 12C2 17.514 6.486 22 12 22C17.514 22 22 17.514 22 12C22 6.486 17.514 2 12 2ZM12 20C7.589 20 4 16.411 4 12C4 7.589 7.589 4 12 4C16.411 4 20 7.589 20 12C20 16.411 16.411 20 12 20Z\" fill=\"white\"/>\n          <path d=\"M13 7H11V12.414L14.293 15.707L15.707 14.293L13 11.586V7Z\" fill=\"white\"/>\n        </svg>\n          {event.start.dateTime}</div>\n        <div className=\"event-location\">\n        <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n          <path d=\"M12 13C13.6569 13 15 11.6569 15 10C15 8.34315 13.6569 7 12 7C10.3431 7 9 8.34315 9 10C9 11.6569 10.3431 13 12 13Z\" stroke=\"white\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n          <path d=\"M12 2C9.87827 2 7.84344 2.84285 6.34315 4.34315C4.84285 5.84344 4 7.87827 4 10C4 11.892 4.402 13.13 5.5 14.5L12 22L18.5 14.5C19.598 13.13 20 11.892 20 10C20 7.87827 19.1571 5.84344 17.6569 4.34315C16.1566 2.84285 14.1217 2 12 2V2Z\" stroke=\"white\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n        </svg>\n          {event.location}</div>\n        <button className=\"button__show-details\" onClick={() => this.expandEvent(event)}>{collapsed ? \"Show details\" : \"Hide details\"}</button>\n        \n        {!collapsed &&\n            // <div className={`event-details ${this.state.collapsed ? \"hide\" : \"show\"}`}>\n            <div className=\"event-details\">\n              <div className=\"event-description\">{event.description}</div>\n            </div>\n          }\n      </div>\n    );\n  }\n}\n\nexport default Event;\n","\nimport React, { Component } from 'react';\nimport Event from './Event';\n\nclass EventList extends Component {\n  render() {\n    const { events } = this.props;\n    return (\n      <div>\n          <ul className=\"EventList\">\n            {events.map(event => \n              <li key={event.id}>\n                <Event event={event} />\n                </li>\n                )}\n          </ul>\n      </div>\n    );\n  }\n}\n\nexport default EventList;\n\n\n","import React, { Component } from 'react';\n\nclass Alert extends Component {\n  constructor(props) {\n    super(props);\n    this.color = null;\n  }\n\n  getStyle = () => {\n    return {\n      color: this.color,\n      text: this.text,\n    };\n  }\n\n   render() {\n     const text = this.props;\n      return (\n        <div className=\"Alert\">\n        {/* {text && \n          <svg width=\"36\" height=\"36\" viewBox=\"0 0 36 36\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n          <path d=\"M34.5999 29.21L20.7099 3.65C20.4335 3.1406 20.0246 2.71527 19.5265 2.41889C19.0284 2.12251 18.4595 1.96606 17.8799 1.96606C17.3003 1.96606 16.7315 2.12251 16.2334 2.41889C15.7353 2.71527 15.3264 3.1406 15.0499 3.65L1.16994 29.21C0.895468 29.7015 0.754627 30.2563 0.761468 30.8192C0.768309 31.3821 0.922592 31.9333 1.20893 32.418C1.49527 32.9026 1.90366 33.3037 2.39338 33.5813C2.8831 33.8589 3.43703 34.0033 3.99994 34H31.7699C32.3271 33.9994 32.8746 33.8543 33.3589 33.5788C33.8432 33.3032 34.2477 32.9068 34.5329 32.4281C34.8181 31.9494 34.9742 31.405 34.9859 30.8479C34.9977 30.2908 34.8647 29.7403 34.5999 29.25V29.21ZM16.5999 10C16.5999 9.6287 16.7474 9.2726 17.01 9.01005C17.2725 8.7475 17.6286 8.6 17.9999 8.6C18.3712 8.6 18.7273 8.7475 18.9899 9.01005C19.2524 9.2726 19.3999 9.6287 19.3999 10V22C19.3999 22.3713 19.2524 22.7274 18.9899 22.9899C18.7273 23.2525 18.3712 23.4 17.9999 23.4C17.6286 23.4 17.2725 23.2525 17.01 22.9899C16.7474 22.7274 16.5999 22.3713 16.5999 22V10ZM17.9999 29.85C17.6439 29.85 17.2959 29.7444 16.9999 29.5466C16.7039 29.3489 16.4732 29.0677 16.337 28.7388C16.2007 28.4099 16.1651 28.048 16.2345 27.6988C16.304 27.3497 16.4754 27.0289 16.7272 26.7772C16.9789 26.5255 17.2996 26.354 17.6488 26.2846C17.9979 26.2151 18.3599 26.2508 18.6888 26.387C19.0177 26.5233 19.2988 26.754 19.4966 27.05C19.6944 27.346 19.7999 27.694 19.7999 28.05C19.7999 28.2864 19.7534 28.5204 19.6629 28.7388C19.5725 28.9572 19.4399 29.1556 19.2727 29.3228C19.1056 29.4899 18.9072 29.6225 18.6888 29.713C18.4704 29.8034 18.2363 29.85 17.9999 29.85V29.85Z\" fill=\"#350568\"/>\n          </svg>\n        } */}\n          <p style={this.getStyle()}>{this.props.text}</p>\n          </div>\n      );\n    }\n}\n\nclass InfoAlert extends Alert {\n  constructor(props) {\n    super(props);\n    this.color = 'var(--purple-dark)';\n  }\n}\n\nclass ErrorAlert extends Alert {\n  constructor(props) {\n    super(props);\n    this.color = 'var(--error)';\n  }\n}\n\nclass WarningAlert extends Alert {\n  constructor(props) {\n    super(props);\n    this.color = 'var(--purple-dark)';\n  }\n}\n\nexport { InfoAlert };\nexport { ErrorAlert };\nexport { WarningAlert };","import React, { Component } from 'react';\nimport { InfoAlert } from './Alert';\nclass CitySearch extends Component {\n  state = {\n    query: '',\n    suggestions: [],\n    showSuggestions: undefined\n  }\n\nhandleInputChanged = (event) => {\n  const value = event.target.value;\n  this.setState({ showSuggestions: true });\n  const suggestions = this.props.locations.filter((location) => {\n    return location.toUpperCase().indexOf(value.toUpperCase()) > -1;\n  });\n  if (suggestions.length === 0) {\n    this.setState({\n      query: value,\n      infoText: 'No city matches your search.',\n    });\n  } else {\n    return this.setState({\n      query: value,\n      suggestions,\n      showSuggestions: true,\n      infoText: ''\n    })\n  }\n}\n\nhandleItemClicked = (suggestion) => {\n  this.setState({\n    query: suggestion,\n    showSuggestions: false,\n    infoText: ''\n  });\n  this.props.updateEvents(suggestion);\n}\n\n  render() {\n\n    return (\n      <div className=\"CitySearch\">\n        <InfoAlert text={this.state.infoText} />\n        <input\n        type=\"text\"\n        className=\"city\"\n        placeholder=\"Enter a city\"\n        value={this.state.query}\n        onFocus={() => this.setState({ showSuggestions: true })}\n        onChange={this.handleInputChanged} />\n        <ul className=\"suggestions\" style={this.state.showSuggestions ? {}: { display: 'none' }}>\n          {this.state.suggestions.map((suggestion) => (\n            <li key={suggestion} onClick={() => this.handleItemClicked(suggestion)}>{suggestion}</li>\n          ))}\n          <li \n          key='all' \n          onClick={() => this.handleItemClicked('all')}>\n            <b>See all cities</b>\n          </li>\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default CitySearch;","import React, { Component } from 'react';\nimport './App.css';\nimport { ErrorAlert } from './Alert';\n\nclass NumberOfEvents extends Component {\n\n  render() {\n    const { numberOfEvents, setNumber } = this.props;\n    const errorText = 'Number of events to display must be between 1 and 100';\n\n    return (\n      <div className=\"NumberOfEvents\">\n      { (numberOfEvents < 1 || numberOfEvents > 100) &&\n          <ErrorAlert text={errorText}/>\n      }\n      <p className=\"number-of-events\">Show</p>\n      <input type=\"number\" min=\"5\" max=\"100\" step=\"5\"\n      value={numberOfEvents} id=\"NumberOfEvents\" onChange={(e) => setNumber(e)} \n      />\n      <p className=\"number-of-events\">events</p>\n      </div>\n    );\n  }\n}\n\nexport default NumberOfEvents;","const mockData = [\n  {\n    \"kind\": \"calendar#event\",\n    \"etag\": \"\\\"3181161784712000\\\"\",\n    \"id\": \"4eahs9ghkhrvkld72hogu9ph3e_20200519T140000Z\",\n    \"status\": \"confirmed\",\n    \"htmlLink\": \"https://www.google.com/calendar/event?eid=NGVhaHM5Z2hraHJ2a2xkNzJob2d1OXBoM2VfMjAyMDA1MTlUMTQwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\n    \"created\": \"2020-05-19T19:17:46.000Z\",\n    \"updated\": \"2020-05-27T12:01:32.356Z\",\n    \"summary\": \"Learn JavaScript\",\n    \"description\": \"Have you wondered how you can ask Google to show you the list of the top ten must-see places in London? And how Google presents you the list? How can you submit the details of an application? Well, JavaScript is doing these. :) \\n\\nJavascript offers interactivity to a dull, static website. Come, learn JavaScript with us and make those beautiful websites.\",\n    \"location\": \"London, UK\",\n    \"creator\": {\n      \"email\": \"fullstackwebdev@careerfoundry.com\",\n      \"self\": true\n    },\n    \"organizer\": {\n      \"email\": \"fullstackwebdev@careerfoundry.com\",\n      \"self\": true\n    },\n    \"start\": {\n      \"dateTime\": \"2020-05-19T16:00:00+02:00\",\n      \"timeZone\": \"Europe/Berlin\"\n    },\n    \"end\": {\n      \"dateTime\": \"2020-05-19T17:00:00+02:00\",\n      \"timeZone\": \"Europe/Berlin\"\n    },\n    \"recurringEventId\": \"4eahs9ghkhrvkld72hogu9ph3e\",\n    \"originalStartTime\": {\n      \"dateTime\": \"2020-05-19T16:00:00+02:00\",\n      \"timeZone\": \"Europe/Berlin\"\n    },\n    \"iCalUID\": \"4eahs9ghkhrvkld72hogu9ph3e@google.com\",\n    \"sequence\": 0,\n    \"reminders\": {\n      \"useDefault\": true\n    },\n    \"eventType\": \"default\"\n  },\n  {\n    \"kind\": \"calendar#event\",\n    \"etag\": \"\\\"3181159875584000\\\"\",\n    \"id\": \"3qtd6uscq4tsi6gc7nmmtpqlct_20200520T120000Z\",\n    \"status\": \"confirmed\",\n    \"htmlLink\": \"https://www.google.com/calendar/event?eid=M3F0ZDZ1c2NxNHRzaTZnYzdubW10cHFsY3RfMjAyMDA1MjBUMTIwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\n    \"created\": \"2020-05-19T19:14:30.000Z\",\n    \"updated\": \"2020-05-27T11:45:37.792Z\",\n    \"summary\": \"React is Fun\",\n    \"description\": \"Love HTML, CSS, and JS? Want to become a cool front-end developer? \\n\\nReact is one of the most popular front-end frameworks. There is a huge number of job openings for React developers in most cities. \\n\\nJoin us in our free React training sessions and give your career a new direction. \",\n    \"location\": \"Berlin, Germany\",\n    \"creator\": {\n      \"email\": \"fullstackwebdev@careerfoundry.com\",\n      \"self\": true\n    },\n    \"organizer\": {\n      \"email\": \"fullstackwebdev@careerfoundry.com\",\n      \"self\": true\n    },\n    \"start\": {\n      \"dateTime\": \"2020-05-20T14:00:00+02:00\",\n      \"timeZone\": \"Europe/Berlin\"\n    },\n    \"end\": {\n      \"dateTime\": \"2020-05-20T15:00:00+02:00\",\n      \"timeZone\": \"Europe/Berlin\"\n    },\n    \"recurringEventId\": \"3qtd6uscq4tsi6gc7nmmtpqlct\",\n    \"originalStartTime\": {\n      \"dateTime\": \"2020-05-20T14:00:00+02:00\",\n      \"timeZone\": \"Europe/Berlin\"\n    },\n    \"iCalUID\": \"3qtd6uscq4tsi6gc7nmmtpqlct@google.com\",\n    \"sequence\": 0,\n    \"reminders\": {\n      \"useDefault\": true\n    },\n    \"eventType\": \"default\"\n  }\n]\n\nexport { mockData };","import { mockData } from \"./mock-data\";\nimport axios from 'axios';\nimport NProgress from 'nprogress'; \n\nexport const extractLocations = (events) => {\n  var extractLocations = events.map((event) => event.location);\n  var locations = [...new Set(extractLocations)];\n  return locations;\n};\n\nconst checkToken = async (accessToken) => {\n  const result = await fetch(\n    `https://www.googleapis.com/oauth2/v1/tokeninfo?access_token=${accessToken}`\n  )\n  .then((res) => res.json())\n  .catch((error) => error.json());\n\n  return result;\n};\n\nconst removeQuery = () => {\n  if (window.history.pushState && window.location.pathname) {\n    var newurl = window.location.protocol +\n    \"//\" +\n    window.location.host +\n    window.location.pathname;\n    window.history.pushState(\"\", \"\", newurl);\n  } else {\n    newurl = window.location.protocol + \"//\" + window.location.host;\n    window.history.pushState(\"\", \"\", newurl);\n  }\n};\n\nconst getToken = async (code) => {\n  const encodeCode = encodeURIComponent(code);\n  const { access_token } = await fetch(\n    `https://0tq0fabzz1.execute-api.eu-central-1.amazonaws.com/dev/api/token/${encodeCode}`\n  )\n  .then((res) => {\n    return res.json();\n  })\n  .catch((error) => error);\n\n  access_token && localStorage.setItem('access_token', access_token);\n\n  return access_token;\n};\n\nexport const getEvents = async () => {\n  NProgress.start();\n\n  if (window.location.href.startsWith('http://localhost')) {\n    NProgress.done();\n    return mockData;\n  }\n\n  if (!navigator.onLine) {\n    const  events = await localStorage.getItem('lastEvents');\n    NProgress.done();\n    return events?JSON.parse(events).events:[];\n  }\n\n  const token = await getAccessToken();\n\n  if (token) {\n    removeQuery();\n    const url = `https://0tq0fabzz1.execute-api.eu-central-1.amazonaws.com/dev/api/get-calendar-events/${token}`;\n    const result = await axios.get(url);\n      if (result.data) {\n        var locations = extractLocations(result.data.events);\n        localStorage.setItem('lastEvents', JSON.stringify(result.data));\n        localStorage.setItem('locations', JSON.stringify(locations));\n      }\n      NProgress.done();\n      return result.data.events;\n  }\n};\n\nexport const getAccessToken = async () => {\n  const accessToken = localStorage.getItem('access_token');\n  const tokenCheck = accessToken && (await checkToken(accessToken));\n\n  if (!accessToken || tokenCheck.error) {\n    await localStorage.removeItem('access_token');\n    const searchParams = new URLSearchParams(window.location.search);\n    const code = await searchParams.get('code');\n    if (!code) {\n      const results = await axios.get(\n        \"https://0tq0fabzz1.execute-api.eu-central-1.amazonaws.com/dev/api/get-auth-url\"\n      );\n      const { authUrl } = results.data;\n      return (window.location.href = authUrl);\n    }\n    return code && getToken(code);\n  }\n  return accessToken;\n};\n\n\n\n//code below is copied from an approved submission with only the URLs replaced\n\n// import { mockData } from './mock-data';\n// import axios from 'axios';\n// import NProgress from 'nprogress';\n\n// /**\n//  *\n//  * @param {*} events:\n//  * The following function should be in the “api.js” file.\n//  * This function takes an events array, then uses map to create a new array with only locations.\n//  * It will also remove all duplicates by creating another new array using the spread operator and spreading a Set.\n//  * The Set will remove all duplicates from the array.\n//  */\n// export const extractLocations = (events) => {\n//   var extractLocations = events.map((event) => event.location);\n//   var locations = [...new Set(extractLocations)];\n//   return locations;\n// };\n\n// const checkToken = async (accessToken) => {\n//   /**\n//    * Send access token to the google API server.\n//    * If the token is valid, get a json response.\n//    * If the token is invalid, we get an error object.\n//    * If we get an error, that is checked by ' || tokenCheck.error '\n//    * in the getAccessToken function. This would cause you to be \n//    * sent to the authorization screen to get a valid token.\n//    */\n//   const result = await fetch(\n//     `https://www.googleapis.com/oauth2/v1/tokeninfo?access_token=${accessToken}`\n//   )\n//     .then((res) => res.json())\n//     .catch((error) => error.json());\n//   return result;\n// }\n\n// const removeQuery = () => {\n//   /**\n//    * This function removes the code from the url\n//    */\n//   if (window.history.pushState && window.location.pathname) {\n//     var newurl = \n//       window.location.protocol +\n//       '//' +\n//       window.location.host +\n//       window.location.pathname;\n//     window.history.pushState('', '', newurl);\n//   } else {\n//     newurl = window.location.protocol + '//' + window.location.host;\n//     window.history.pushState('', '', newurl);\n//   }\n// }\n\n// const getToken = async (code) => {\n//   /**\n//    * Takes an access code and sends it to the Google API to exchange for an access token\n//    */\n//   const encodeCode = encodeURIComponent(code);\n//   const { access_token } = await fetch(\n//     `https://0tq0fabzz1.execute-api.eu-central-1.amazonaws.com/dev/api/token/${encodeCode}`\n//   )\n//     .then((res) => {\n//       return res.json();\n//     })\n//     .catch((error) => error);\n\n//     access_token && localStorage.setItem('access_token', access_token);\n\n//     return access_token;\n// }\n\n// export const getEvents = async () => {\n//   /**\n//    * We use the mock data when we are testing on localhost,\n//    * but we use the real API data when we are live.\n//    */\n//   NProgress.start(); //This is a loading bar libray\n\n//   //Return mock data while testing\n//   if (window.location.href.startsWith('http://localhost')) {\n//     NProgress.done();\n//     return mockData;\n//   } \n\n//   const token = await getAccessToken();\n\n//   if (token) {\n//     removeQuery(); //remove the code from the url once we are done with it\n//     const url = `https://0tq0fabzz1.execute-api.eu-central-1.amazonaws.com/dev/api/get-calendar-events/${token}`;\n//     const result = await axios.get(url);\n//     if (result.data) {\n//       var locations = extractLocations(result.data.events);\n//       localStorage.setItem('lastEvents', JSON.stringify(result.data));\n//       localStorage.setItem('locations', JSON.stringify(locations));\n//     }\n//     NProgress.done();\n//     return result.data.events;\n//   }\n\n// };\n\n// export const getAccessToken = async () => {\n//   /* Step 1 is to check and see if the user already has a valid access token */\n//   const accessToken = localStorage.getItem('access_token');\n//   const tokenCheck = accessToken && (await checkToken(accessToken));\n\n//   /* If there is no valid access token, we need to get one */\n//   if (!accessToken || tokenCheck.error) {\n//     await localStorage.removeItem('access_token');\n//     const searchParams = new URLSearchParams(window.location.search);\n//     /* There is no valid access token, but we can check for a valid code */\n//     const code = await searchParams.get('code');\n//     if (!code) {\n//       /* There is no code, so redirect to my getAuthUrl endpoint */\n//       const results = await axios.get(\n//         \"https://0tq0fabzz1.execute-api.eu-central-1.amazonaws.com/dev/api/get-auth-url\"\n//       );\n//       const { authUrl } = results.data;\n//       return (window.location.href = authUrl);\n//     }\n//     return code && getToken(code);\n//   }\n//   return accessToken;\n// }\n\n","import React, { Component } from 'react';\n\nclass Header extends Component {\n  render() {\n   \n    return (\n      <div className=\"Header\">\n        <a href=\"https://wojtek-lukowski.github.io/evently/\">\n        <svg width=\"69\" height=\"103\" viewBox=\"0 0 69 103\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M61.7344 58.6328H21.2344V86.0547H68.7656V103H0.140625V0.625H68.625V17.7109H21.2344V42.1094H61.7344V58.6328Z\" fill=\"white\"/>\n</svg>\n        </a>\n      </div>\n    );\n  }\n}\n\nexport default Header;","import React, { Component } from 'react';\nimport './App.css';\nimport './nprogress.css';\nimport EventList from './EventList';\nimport CitySearch from './CitySearch';\nimport NumberOfEvents from './NumberOfEvents';\nimport { extractLocations, getEvents } from './api';\nimport { WarningAlert } from './Alert';\nimport Header from './Header';\n\nclass App extends Component {\n\n  state = {\n    events: [],\n    locations: [],\n    numberOfEvents: 30,\n    currentLocation: 'all'\n  }\n\n  async componentDidMount() {\n    const { numberOfEvents } = this.state;\n    this.mounted = true;\n    getEvents().then((events) => {\n      if (this.mounted) {\n        this.setState({\n          events: events.slice(0, numberOfEvents),\n          locations: extractLocations(events) });\n      }\n    });\n  }\n\n  componentWillUnmount(){\n    this.mounted = false;\n  }\n\n  updateEvents = (location, numberOfEvents) => {\n    getEvents().then((events) => {\n      const locationEvents = (location === 'all') ?\n        events :\n        events.filter((event) => event.location === location);\n      this.setState({\n        events: locationEvents.slice(0, this.state.numberOfEvents),\n      });\n    });\n  }\n  \n  setNumber = (e) => {\n    const newNumber = parseInt(e.target.value);\n    this.setState({\n      numberOfEvents: newNumber\n    })\n    this.updateEvents(this.state.currentLocation, this.state.numberOfEvents);\n  }\n\n  render() {\n\n    return (\n      <div className=\"App\">\n         { !navigator.onLine ? (<WarningAlert text='You are offline. The events may not be updated.' />) : (<WarningAlert text=' ' />)}\n        <Header />\n        <CitySearch locations={this.state.locations} updateEvents={this.updateEvents} />\n        <NumberOfEvents numberOfEvents={this.state.numberOfEvents} setNumber={this.setNumber}/>\n        <EventList events={this.state.events}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n\n\n//copied from CF\n\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\n// const isLocalhost = Boolean(\n//   window.location.hostname === 'localhost' ||\n//     // [::1] is the IPv6 localhost address.\n//     window.location.hostname === '[::1]' ||\n//     // 127.0.0.0/8 are considered localhost for IPv4.\n//     window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n// );\n\n// export function register(config) {\n//   if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n//     // The URL constructor is available in all browsers that support SW.\n//     const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n//     if (publicUrl.origin !== window.location.origin) {\n//       // Our service worker won't work if PUBLIC_URL is on a different origin\n//       // from what our page is served on. This might happen if a CDN is used to\n//       // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n//       return;\n//     }\n\n//     window.addEventListener('load', () => {\n//       const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n//       if (isLocalhost) {\n//         // This is running on localhost. Let's check if a service worker still exists or not.\n//         checkValidServiceWorker(swUrl, config);\n\n//         // Add some additional logging to localhost, pointing developers to the\n//         // service worker/PWA documentation.\n//         navigator.serviceWorker.ready.then(() => {\n//           console.log(\n//             'This web app is being served cache-first by a service ' +\n//               'worker. To learn more, visit https://cra.link/PWA'\n//           );\n//         });\n//       } else {\n//         // Is not localhost. Just register service worker\n//         registerValidSW(swUrl, config);\n//       }\n//     });\n//   }\n// }\n\n// function registerValidSW(swUrl, config) {\n//   navigator.serviceWorker\n//     .register(swUrl)\n//     .then((registration) => {\n//       registration.onupdatefound = () => {\n//         const installingWorker = registration.installing;\n//         if (installingWorker == null) {\n//           return;\n//         }\n//         installingWorker.onstatechange = () => {\n//           if (installingWorker.state === 'installed') {\n//             if (navigator.serviceWorker.controller) {\n//               // At this point, the updated precached content has been fetched,\n//               // but the previous service worker will still serve the older\n//               // content until all client tabs are closed.\n//               console.log(\n//                 'New content is available and will be used when all ' +\n//                   'tabs for this page are closed. See https://cra.link/PWA.'\n//               );\n\n//               // Execute callback\n//               if (config && config.onUpdate) {\n//                 config.onUpdate(registration);\n//               }\n//             } else {\n//               // At this point, everything has been precached.\n//               // It's the perfect time to display a\n//               // \"Content is cached for offline use.\" message.\n//               console.log('Content is cached for offline use.');\n\n//               // Execute callback\n//               if (config && config.onSuccess) {\n//                 config.onSuccess(registration);\n//               }\n//             }\n//           }\n//         };\n//       };\n//     })\n//     .catch((error) => {\n//       console.error('Error during service worker registration:', error);\n//     });\n// }\n\n// function checkValidServiceWorker(swUrl, config) {\n//   // Check if the service worker can be found. If it can't reload the page.\n//   fetch(swUrl, {\n//     headers: { 'Service-Worker': 'script' },\n//   })\n//     .then((response) => {\n//       // Ensure service worker exists, and that we really are getting a JS file.\n//       const contentType = response.headers.get('content-type');\n//       if (\n//         response.status === 404 ||\n//         (contentType != null && contentType.indexOf('javascript') === -1)\n//       ) {\n//         // No service worker found. Probably a different app. Reload the page.\n//         navigator.serviceWorker.ready.then((registration) => {\n//           registration.unregister().then(() => {\n//             window.location.reload();\n//           });\n//         });\n//       } else {\n//         // Service worker found. Proceed as normal.\n//         registerValidSW(swUrl, config);\n//       }\n//     })\n//     .catch(() => {\n//       console.log('No internet connection found. App is running in offline mode.');\n//     });\n// }\n\n// export function unregister() {\n//   if ('serviceWorker' in navigator) {\n//     navigator.serviceWorker.ready\n//       .then((registration) => {\n//         registration.unregister();\n//       })\n//       .catch((error) => {\n//         console.error(error.message);\n//       });\n//   }\n// }\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport * as serviceWorker from \"./serviceWorkerRegistration\";\n// import * as serviceWorker from \"./service-worker\";\nimport reportWebVitals from './reportWebVitals';\nimport * as atatus from 'atatus-spa';\natatus.config('5daf933ec5084b55a2381180197b6dc9').install();\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// ReactDOM.render(<App />, document.getElementById('root'));\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\n\n// serviceWorkerRegistration.unregister();\nserviceWorker.register();\n// serviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}