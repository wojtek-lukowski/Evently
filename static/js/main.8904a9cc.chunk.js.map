{"version":3,"sources":["Event.js","EventList.js","CitySearch.js","NumberOfEvents.js","mock-data.js","api.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["Event","state","collapsed","expandEvent","event","setState","this","props","console","log","className","summary","width","height","viewBox","fill","xmlns","d","start","dateTime","stroke","location","onClick","description","Component","EventList","events","map","id","CitySearch","query","suggestions","showSuggestions","undefined","handleInputChanged","value","target","locations","filter","toUpperCase","indexOf","handleItemClicked","suggestion","updateEvents","type","onFocus","onChange","style","display","NumberOfEvents","numberOfEvents","setNumber","min","max","step","e","mockData","extractLocations","Set","checkToken","accessToken","a","fetch","then","res","json","catch","error","result","removeQuery","window","history","pushState","pathname","newurl","protocol","host","getToken","code","encodeCode","encodeURIComponent","access_token","localStorage","setItem","getEvents","NProgress","href","startsWith","done","getAccessToken","token","url","axios","get","data","JSON","stringify","getItem","tokenCheck","removeItem","searchParams","URLSearchParams","search","results","authUrl","App","currentLocation","locationEvents","slice","newNumber","parseInt","mounted","Boolean","hostname","match","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","atatus","install","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"8RACMA,E,4MACJC,MAAQ,CACNC,WAAW,G,EAGbC,YAAc,SAACC,GACM,EAAKH,MAAMC,UAG5B,EAAKG,SAAS,CACZH,WAAW,IAGb,EAAKG,SAAS,CACZH,WAAW,K,4CAKjB,WAAU,IAAD,OACCE,EAAUE,KAAKC,MAAfH,MACAF,EAAcI,KAAKL,MAAnBC,UAGR,OAFAM,QAAQC,IAAI,yBAA0BH,KAAKL,MAAMC,WAG/C,sBAAKQ,UAAU,QAAf,UAEE,qBAAKA,UAAU,gBAAf,SACE,6BAAKN,EAAMO,YACb,sBAAKD,UAAU,aAAf,UACA,sBAAKE,MAAM,KAAKC,OAAO,KAAKC,QAAQ,YAAYC,KAAK,OAAOC,MAAM,6BAAlE,UACE,sBAAMC,EAAE,4MAA4MF,KAAK,UACzN,sBAAME,EAAE,2DAA2DF,KAAK,aAEvEX,EAAMc,MAAMC,YACf,sBAAKT,UAAU,iBAAf,UACA,sBAAKE,MAAM,KAAKC,OAAO,KAAKC,QAAQ,YAAYC,KAAK,OAAOC,MAAM,6BAAlE,UACE,sBAAMC,EAAE,oHAAoHG,OAAO,QAAQ,eAAa,IAAI,iBAAe,QAAQ,kBAAgB,UACnM,sBAAMH,EAAE,yOAAyOG,OAAO,QAAQ,eAAa,IAAI,iBAAe,QAAQ,kBAAgB,aAEvThB,EAAMiB,YACT,wBAAQX,UAAU,uBAAuBY,QAAS,kBAAM,EAAKnB,YAAYC,IAAzE,SAAkFF,EAAY,eAAiB,kBAE7GA,GAEE,qBAAKQ,UAAU,gBAAf,SACE,qBAAKA,UAAU,oBAAf,SAAoCN,EAAMmB,uB,GA9CpCC,aAsDLxB,ICnDTyB,E,4JACJ,WACE,IAAQC,EAAWpB,KAAKC,MAAhBmB,OACR,OACE,8BACI,oBAAIhB,UAAU,YAAd,SACGgB,EAAOC,KAAI,SAAAvB,GAAK,OACf,6BACE,cAAC,EAAD,CAAOA,MAAOA,KADPA,EAAMwB,e,GAPLJ,aAiBTC,ICpBTI,E,4MACJ5B,MAAQ,CACN6B,MAAO,GACPC,YAAa,GACbC,qBAAiBC,G,EAGrBC,mBAAqB,SAAC9B,GACpB,IAAM+B,EAAQ/B,EAAMgC,OAAOD,MACrBJ,EAAc,EAAKxB,MAAM8B,UAAUC,QAAO,SAACjB,GAC/C,OAAOA,EAASkB,cAAcC,QAAQL,EAAMI,gBAAkB,KAEhE,EAAKlC,SAAS,CACZyB,MAAOK,EACPJ,iB,EAIJU,kBAAoB,SAACC,GACnB,EAAKrC,SAAS,CACZyB,MAAOY,EACPV,iBAAiB,IAEnB,EAAKzB,MAAMoC,aAAaD,I,4CAGxB,WAAU,IAAD,OACP,OACE,sBAAKhC,UAAU,aAAf,UACE,uBACAkC,KAAK,OACLlC,UAAU,OACVyB,MAAO7B,KAAKL,MAAM6B,MAClBe,QAAS,kBAAM,EAAKxC,SAAS,CAAE2B,iBAAiB,KAChDc,SAAUxC,KAAK4B,qBACf,qBAAIxB,UAAU,cAAcqC,MAAOzC,KAAKL,MAAM+B,gBAAkB,GAAI,CAAEgB,QAAS,QAA/E,UACG1C,KAAKL,MAAM8B,YAAYJ,KAAI,SAACe,GAAD,OAC1B,oBAAqBpB,QAAS,kBAAM,EAAKmB,kBAAkBC,IAA3D,SAAyEA,GAAhEA,MAEX,oBAEApB,QAAS,kBAAM,EAAKmB,kBAAkB,QAFtC,SAGE,gDAFE,iB,GAxCWjB,aAkDVK,IChDToB,E,4JAEJ,WACE,MAAsC3C,KAAKC,MAAnC2C,EAAR,EAAQA,eAAgBC,EAAxB,EAAwBA,UAExB,OACE,sBAAKzC,UAAU,iBAAf,UACA,mBAAGA,UAAU,mBAAb,kBACA,uBAAOkC,KAAK,SAASQ,IAAI,IAAIC,IAAI,KAAKC,KAAK,IAC3CnB,MAAOe,EAAgBtB,GAAG,iBAAiBkB,SAAU,SAACS,GAAD,OAAOJ,EAAUI,MAEtE,mBAAG7C,UAAU,mBAAb,2B,GAXuBc,aAiBdyB,I,QCpBTO,EAAW,CACf,CACE,KAAQ,iBACR,KAAQ,qBACR,GAAM,8CACN,OAAU,YACV,SAAY,oJACZ,QAAW,2BACX,QAAW,2BACX,QAAW,mBACX,YAAe,uWACf,SAAY,aACZ,QAAW,CACT,MAAS,oCACT,MAAQ,GAEV,UAAa,CACX,MAAS,oCACT,MAAQ,GAEV,MAAS,CACP,SAAY,4BACZ,SAAY,iBAEd,IAAO,CACL,SAAY,4BACZ,SAAY,iBAEd,iBAAoB,6BACpB,kBAAqB,CACnB,SAAY,4BACZ,SAAY,iBAEd,QAAW,wCACX,SAAY,EACZ,UAAa,CACX,YAAc,GAEhB,UAAa,WAEf,CACE,KAAQ,iBACR,KAAQ,qBACR,GAAM,8CACN,OAAU,YACV,SAAY,oJACZ,QAAW,2BACX,QAAW,2BACX,QAAW,eACX,YAAe,mSACf,SAAY,kBACZ,QAAW,CACT,MAAS,oCACT,MAAQ,GAEV,UAAa,CACX,MAAS,oCACT,MAAQ,GAEV,MAAS,CACP,SAAY,4BACZ,SAAY,iBAEd,IAAO,CACL,SAAY,4BACZ,SAAY,iBAEd,iBAAoB,6BACpB,kBAAqB,CACnB,SAAY,4BACZ,SAAY,iBAEd,QAAW,wCACX,SAAY,EACZ,UAAa,CACX,YAAc,GAEhB,UAAa,Y,kCCzEJC,EAAmB,SAAC/B,GAC/B,IAAI+B,EAAmB/B,EAAOC,KAAI,SAACvB,GAAD,OAAWA,EAAMiB,YAEnD,OADa,YAAO,IAAIqC,IAAID,KAIxBE,EAAU,uCAAG,WAAOC,GAAP,eAAAC,EAAA,sEACIC,MAAM,+DAAD,OACuCF,IAEhEG,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBC,OAAM,SAACC,GAAD,OAAWA,EAAMF,UALP,cACXG,EADW,yBAOVA,GAPU,2CAAH,sDAUVC,EAAc,WAClB,GAAIC,OAAOC,QAAQC,WAAaF,OAAOjD,SAASoD,SAAU,CACxD,IAAIC,EAASJ,OAAOjD,SAASsD,SAC7B,KACAL,OAAOjD,SAASuD,KAChBN,OAAOjD,SAASoD,SAChBH,OAAOC,QAAQC,UAAU,GAAI,GAAIE,QAEjCA,EAASJ,OAAOjD,SAASsD,SAAW,KAAOL,OAAOjC,UAAUuC,KAC5DN,OAAOC,QAAQC,UAAU,GAAI,GAAIE,IAI/BG,EAAQ,uCAAG,WAAOC,GAAP,mBAAAjB,EAAA,6DACTkB,EAAaC,mBAAmBF,GADvB,SAEgBhB,MAC7B,+DAAsEiB,GAEvEhB,MAAK,SAACC,GACL,OAAOA,EAAIC,UAEZC,OAAM,SAACC,GAAD,OAAWA,KARH,wBAEPc,EAFO,EAEPA,eAQQC,aAAaC,QAAQ,eAAgBF,GAVtC,kBAYRA,GAZQ,2CAAH,sDAeDG,EAAS,uCAAG,kCAAAvB,EAAA,yDACvBwB,IAAUnE,SAENoD,OAAOjD,SAASiE,KAAKC,WAAW,oBAHb,uBAIrBF,IAAUG,OAJW,kBAKdhC,GALc,uBAQHiC,IARG,YAQjBC,EARiB,gCAWrBrB,IACMsB,EAAM,gFAAuFD,EAZ9E,UAaAE,IAAMC,IAAIF,GAbV,eAafvB,EAbe,QAcR0B,OACLzD,EAAYoB,EAAiBW,EAAO0B,KAAKpE,QAC7CwD,aAAaC,QAAQ,aAAcY,KAAKC,UAAU5B,EAAO0B,OACzDZ,aAAaC,QAAQ,YAAaY,KAAKC,UAAU3D,KAEnDgD,IAAUG,OAnBS,kBAoBZpB,EAAO0B,KAAKpE,QApBA,4CAAH,qDAwBT+D,EAAc,uCAAG,sCAAA5B,EAAA,yDACtBD,EAAcsB,aAAae,QAAQ,gBADb,KAETrC,GAFS,qCAEaD,EAAWC,GAFxB,6BAEtBsC,EAFsB,KAIvBtC,IAAesC,EAAW/B,MAJH,kCAKpBe,aAAaiB,WAAW,gBALJ,eAMpBC,EAAe,IAAIC,gBAAgB/B,OAAOjD,SAASiF,QAN/B,UAOPF,EAAaP,IAAI,QAPV,WAOpBf,EAPoB,yCASFc,IAAMC,IAC1B,kFAVsB,eASlBU,EATkB,OAYhBC,EAAYD,EAAQT,KAApBU,QAZgB,kBAahBlC,OAAOjD,SAASiE,KAAOkB,GAbP,iCAenB1B,GAAQD,EAASC,IAfE,iCAiBrBlB,GAjBqB,4CAAH,qDChErB6C,E,4MAEJxG,MAAQ,CACNyB,OAAQ,GACRW,UAAW,GACXa,eAAgB,GAChBwD,gBAAiB,O,EAmBnB/D,aAAe,SAACtB,EAAU6B,GACxBkC,IAAYrB,MAAK,SAACrC,GAChB,IAAMiF,EAA+B,QAAbtF,EACtBK,EACAA,EAAOY,QAAO,SAAClC,GAAD,OAAWA,EAAMiB,WAAaA,KAC9C,EAAKhB,SAAS,CACZqB,OAAQiF,EAAeC,MAAM,EAAG,EAAK3G,MAAMiD,sB,EAMjDC,UAAY,SAACI,GACX,IAAMsD,EAAYC,SAASvD,EAAEnB,OAAOD,OACpC,EAAK9B,SAAS,CACZ6C,eAAgB2D,IAElB,EAAKlE,aAAa,EAAK1C,MAAMyG,gBAAiB,EAAKzG,MAAMiD,gBACzD1C,QAAQC,IAAI,eAAgB8C,EAAEnB,OAAOD,Q,8FAlCvC,mCAAA0B,EAAA,sDACUX,EAAmB5C,KAAKL,MAAxBiD,eACR5C,KAAKyG,SAAU,EACf3B,IAAYrB,MAAK,SAACrC,GACZ,EAAKqF,SACP,EAAK1G,SAAS,CACZqB,OAAQA,EAAOkF,MAAM,EAAG1D,GACxBb,UAAWoB,EAAiB/B,QAPpC,gD,wFAYA,WACEpB,KAAKyG,SAAU,I,oBAwBjB,WAGE,OAFAvG,QAAQC,IAAIH,KAAKL,OAGf,sBAAKS,UAAU,MAAf,UACE,cAAC,EAAD,CAAY2B,UAAW/B,KAAKL,MAAMoC,UAAWM,aAAcrC,KAAKqC,eAChE,cAAC,EAAD,CAAgBO,eAAgB5C,KAAKL,MAAMiD,eAAgBC,UAAW7C,KAAK6C,YAC3E,cAAC,EAAD,CAAWzB,OAAQpB,KAAKL,MAAMyB,gB,GArDpBF,aA2DHiF,ICvDKO,QACW,cAA7B1C,OAAOjD,SAAS4F,UAEe,UAA7B3C,OAAOjD,SAAS4F,UAEhB3C,OAAOjD,SAAS4F,SAASC,MAAM,2DCjBnC,IAYeC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBtD,MAAK,YAAkD,IAA/CuD,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,OAAc,oCAAoCC,UAElDC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SFkHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBrE,MAAK,SAACsE,GACLA,EAAaC,gBAEdpE,OAAM,SAACC,GACN3D,QAAQ2D,MAAMA,EAAMoE,YE7G5BpB,M","file":"static/js/main.8904a9cc.chunk.js","sourcesContent":["import React, { Component } from 'react';\nclass Event extends Component {\n  state = {\n    collapsed: true\n  }\n\n  expandEvent = (event) => {\n    const checkEvent = this.state.collapsed;\n    \n    if (checkEvent) {\n      this.setState({\n        collapsed: false\n      })\n    } else {\n      this.setState({\n        collapsed: true\n      })\n    }\n  };\n\n  render() {\n    const { event } = this.props;\n    const { collapsed } = this.state;\n    console.log('event state collapsed:', this.state.collapsed);\n\n    return (\n      <div className=\"event\">\n        \n        <div className=\"event-summary\">\n          <h3>{event.summary}</h3></div>\n        <div className=\"event-time\">\n        <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n          <path d=\"M12 2C6.486 2 2 6.486 2 12C2 17.514 6.486 22 12 22C17.514 22 22 17.514 22 12C22 6.486 17.514 2 12 2ZM12 20C7.589 20 4 16.411 4 12C4 7.589 7.589 4 12 4C16.411 4 20 7.589 20 12C20 16.411 16.411 20 12 20Z\" fill=\"white\"/>\n          <path d=\"M13 7H11V12.414L14.293 15.707L15.707 14.293L13 11.586V7Z\" fill=\"white\"/>\n        </svg>\n          {event.start.dateTime}</div>\n        <div className=\"event-location\">\n        <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n          <path d=\"M12 13C13.6569 13 15 11.6569 15 10C15 8.34315 13.6569 7 12 7C10.3431 7 9 8.34315 9 10C9 11.6569 10.3431 13 12 13Z\" stroke=\"white\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n          <path d=\"M12 2C9.87827 2 7.84344 2.84285 6.34315 4.34315C4.84285 5.84344 4 7.87827 4 10C4 11.892 4.402 13.13 5.5 14.5L12 22L18.5 14.5C19.598 13.13 20 11.892 20 10C20 7.87827 19.1571 5.84344 17.6569 4.34315C16.1566 2.84285 14.1217 2 12 2V2Z\" stroke=\"white\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n        </svg>\n          {event.location}</div>\n        <button className=\"button__show-details\" onClick={() => this.expandEvent(event)}>{collapsed ? \"Show details\" : \"Hide details\"}</button>\n        \n        {!collapsed &&\n            // <div className={`event-details ${this.state.collapsed ? \"hide\" : \"show\"}`}>\n            <div className=\"event-details\">\n              <div className=\"event-description\">{event.description}</div>\n            </div>\n          }\n      </div>\n    );\n  }\n}\n\nexport default Event;\n","\nimport React, { Component } from 'react';\nimport Event from './Event';\n\nclass EventList extends Component {\n  render() {\n    const { events } = this.props;\n    return (\n      <div>\n          <ul className=\"EventList\">\n            {events.map(event => \n              <li key={event.id}>\n                <Event event={event} />\n                </li>\n                )}\n          </ul>\n      </div>\n    );\n  }\n}\n\nexport default EventList;\n\n\n","import React, { Component } from 'react';\nclass CitySearch extends Component {\n  state = {\n    query: '',\n    suggestions: [],\n    showSuggestions: undefined\n  }\n\nhandleInputChanged = (event) => {\n  const value = event.target.value;\n  const suggestions = this.props.locations.filter((location) => {\n    return location.toUpperCase().indexOf(value.toUpperCase()) > -1;\n  });\n  this.setState({\n    query: value,\n    suggestions,\n  });\n}\n\nhandleItemClicked = (suggestion) => {\n  this.setState({\n    query: suggestion,\n    showSuggestions: false\n  });\n  this.props.updateEvents(suggestion);\n}\n\n  render() {\n    return (\n      <div className=\"CitySearch\">\n        <input\n        type=\"text\"\n        className=\"city\"\n        value={this.state.query}\n        onFocus={() => this.setState({ showSuggestions: true })}\n        onChange={this.handleInputChanged} />\n        <ul className=\"suggestions\" style={this.state.showSuggestions ? {}: { display: 'none' }}>\n          {this.state.suggestions.map((suggestion) => (\n            <li key={suggestion} onClick={() => this.handleItemClicked(suggestion)}>{suggestion}</li>\n          ))}\n          <li \n          key='all' \n          onClick={() => this.handleItemClicked('all')}>\n            <b>See all cities</b>\n          </li>\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default CitySearch;","import React, { Component } from 'react';\nimport './App.css';\n\nclass NumberOfEvents extends Component {\n\n  render() {\n    const { numberOfEvents, setNumber } = this.props;\n\n    return (\n      <div className=\"NumberOfEvents\">\n      <p className=\"number-of-events\">Show</p>\n      <input type=\"number\" min=\"5\" max=\"50\" step=\"5\"\n      value={numberOfEvents} id=\"NumberOfEvents\" onChange={(e) => setNumber(e)} \n      />\n      <p className=\"number-of-events\">events</p>\n      </div>\n    );\n  }\n}\n\nexport default NumberOfEvents;","const mockData = [\n  {\n    \"kind\": \"calendar#event\",\n    \"etag\": \"\\\"3181161784712000\\\"\",\n    \"id\": \"4eahs9ghkhrvkld72hogu9ph3e_20200519T140000Z\",\n    \"status\": \"confirmed\",\n    \"htmlLink\": \"https://www.google.com/calendar/event?eid=NGVhaHM5Z2hraHJ2a2xkNzJob2d1OXBoM2VfMjAyMDA1MTlUMTQwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\n    \"created\": \"2020-05-19T19:17:46.000Z\",\n    \"updated\": \"2020-05-27T12:01:32.356Z\",\n    \"summary\": \"Learn JavaScript\",\n    \"description\": \"Have you wondered how you can ask Google to show you the list of the top ten must-see places in London? And how Google presents you the list? How can you submit the details of an application? Well, JavaScript is doing these. :) \\n\\nJavascript offers interactivity to a dull, static website. Come, learn JavaScript with us and make those beautiful websites.\",\n    \"location\": \"London, UK\",\n    \"creator\": {\n      \"email\": \"fullstackwebdev@careerfoundry.com\",\n      \"self\": true\n    },\n    \"organizer\": {\n      \"email\": \"fullstackwebdev@careerfoundry.com\",\n      \"self\": true\n    },\n    \"start\": {\n      \"dateTime\": \"2020-05-19T16:00:00+02:00\",\n      \"timeZone\": \"Europe/Berlin\"\n    },\n    \"end\": {\n      \"dateTime\": \"2020-05-19T17:00:00+02:00\",\n      \"timeZone\": \"Europe/Berlin\"\n    },\n    \"recurringEventId\": \"4eahs9ghkhrvkld72hogu9ph3e\",\n    \"originalStartTime\": {\n      \"dateTime\": \"2020-05-19T16:00:00+02:00\",\n      \"timeZone\": \"Europe/Berlin\"\n    },\n    \"iCalUID\": \"4eahs9ghkhrvkld72hogu9ph3e@google.com\",\n    \"sequence\": 0,\n    \"reminders\": {\n      \"useDefault\": true\n    },\n    \"eventType\": \"default\"\n  },\n  {\n    \"kind\": \"calendar#event\",\n    \"etag\": \"\\\"3181159875584000\\\"\",\n    \"id\": \"3qtd6uscq4tsi6gc7nmmtpqlct_20200520T120000Z\",\n    \"status\": \"confirmed\",\n    \"htmlLink\": \"https://www.google.com/calendar/event?eid=M3F0ZDZ1c2NxNHRzaTZnYzdubW10cHFsY3RfMjAyMDA1MjBUMTIwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\n    \"created\": \"2020-05-19T19:14:30.000Z\",\n    \"updated\": \"2020-05-27T11:45:37.792Z\",\n    \"summary\": \"React is Fun\",\n    \"description\": \"Love HTML, CSS, and JS? Want to become a cool front-end developer? \\n\\nReact is one of the most popular front-end frameworks. There is a huge number of job openings for React developers in most cities. \\n\\nJoin us in our free React training sessions and give your career a new direction. \",\n    \"location\": \"Berlin, Germany\",\n    \"creator\": {\n      \"email\": \"fullstackwebdev@careerfoundry.com\",\n      \"self\": true\n    },\n    \"organizer\": {\n      \"email\": \"fullstackwebdev@careerfoundry.com\",\n      \"self\": true\n    },\n    \"start\": {\n      \"dateTime\": \"2020-05-20T14:00:00+02:00\",\n      \"timeZone\": \"Europe/Berlin\"\n    },\n    \"end\": {\n      \"dateTime\": \"2020-05-20T15:00:00+02:00\",\n      \"timeZone\": \"Europe/Berlin\"\n    },\n    \"recurringEventId\": \"3qtd6uscq4tsi6gc7nmmtpqlct\",\n    \"originalStartTime\": {\n      \"dateTime\": \"2020-05-20T14:00:00+02:00\",\n      \"timeZone\": \"Europe/Berlin\"\n    },\n    \"iCalUID\": \"3qtd6uscq4tsi6gc7nmmtpqlct@google.com\",\n    \"sequence\": 0,\n    \"reminders\": {\n      \"useDefault\": true\n    },\n    \"eventType\": \"default\"\n  }\n]\n\nexport { mockData };","import { mockData } from \"./mock-data\";\nimport axios from 'axios';\nimport NProgress from 'nprogress'; \n\nexport const extractLocations = (events) => {\n  var extractLocations = events.map((event) => event.location);\n  var locations = [...new Set(extractLocations)];\n  return locations;\n};\n\nconst checkToken = async (accessToken) => {\n  const result = await fetch(\n    `https://www.googleapis.com/oauth2/v1/tokeninfo?access_token=${accessToken}`\n  )\n  .then((res) => res.json())\n  .catch((error) => error.json());\n\n  return result;\n};\n\nconst removeQuery = () => {\n  if (window.history.pushState && window.location.pathname) {\n    var newurl = window.location.protocol +\n    \"//\" +\n    window.location.host +\n    window.location.pathname;\n    window.history.pushState(\"\", \"\", newurl);\n  } else {\n    newurl = window.location.protocol + \"//\" + window.locations.host;\n    window.history.pushState(\"\", \"\", newurl);\n  }\n};\n\nconst getToken = async (code) => {\n  const encodeCode = encodeURIComponent(code);\n  const { access_token } = await fetch(\n    'https://www.googleapis.com/oauth2/v1/tokeninfo?access_token' + '/' + encodeCode\n  )\n  .then((res) => {\n    return res.json();\n  })\n  .catch((error) => error);\n\n  access_token && localStorage.setItem('access_token', access_token);\n\n  return access_token;\n};\n\nexport const getEvents = async () => {\n  NProgress.start();\n\n  if (window.location.href.startsWith('http://localhost')) {\n    NProgress.done();\n    return mockData;\n  }\n\n  const token = await getAccessToken();\n\n  if (token) {\n    removeQuery();\n    const url = 'https://0tq0fabzz1.execute-api.eu-central-1.amazonaws.com/dev/api/get-events' + '/' + token;\n    const result = await axios.get(url);\n      if (result.data) {\n        var locations = extractLocations(result.data.events);\n        localStorage.setItem('lastEvents', JSON.stringify(result.data));\n        localStorage.setItem('locations', JSON.stringify(locations));\n      }\n      NProgress.done();\n      return result.data.events;\n  }\n};\n\nexport const getAccessToken = async () => {\n  const accessToken = localStorage.getItem('access_token');\n  const tokenCheck = accessToken && (await checkToken(accessToken));\n\n  if (!accessToken || tokenCheck.error) {\n    await localStorage.removeItem('access_token');\n    const searchParams = new URLSearchParams(window.location.search);\n    const code = await searchParams.get('code');\n    if (!code) {\n      const results = await axios.get(\n        \"https://0tq0fabzz1.execute-api.eu-central-1.amazonaws.com/dev/api/get-auth-url\"\n      );\n      const { authUrl } = results.data;\n      return (window.location.href = authUrl);\n    }\n    return code && getToken(code);\n  }\n  return accessToken;\n};\n\n//copied code\n\n// import { mockData } from './mock-data';\n// import axios from 'axios';\n// import NProgress from 'nprogress';\n\n// /**\n//  *\n//  * @param {*} events:\n//  * The following function should be in the “api.js” file.\n//  * This function takes an events array, then uses map to create a new array with only locations.\n//  * It will also remove all duplicates by creating another new array using the spread operator and spreading a Set.\n//  * The Set will remove all duplicates from the array.\n//  */\n// export const extractLocations = (events) => {\n//   var extractLocations = events.map((event) => event.location);\n//   var locations = [...new Set(extractLocations)];\n//   return locations;\n// };\n\n// const checkToken = async (accessToken) => {\n//   /**\n//    * Send access token to the google API server.\n//    * If the token is valid, get a json response.\n//    * If the token is invalid, we get an error object.\n//    * If we get an error, that is checked by ' || tokenCheck.error '\n//    * in the getAccessToken function. This would cause you to be \n//    * sent to the authorization screen to get a valid token.\n//    */\n//   const result = await fetch(\n//     `https://www.googleapis.com/oauth2/v1/tokeninfo?access_token=${accessToken}`\n//   )\n//     .then((res) => res.json())\n//     .catch((error) => error.json());\n//   return result;\n// }\n\n// const removeQuery = () => {\n//   /**\n//    * This function removes the code from the url\n//    */\n//   if (window.history.pushState && window.location.pathname) {\n//     var newurl = \n//       window.location.protocol +\n//       '//' +\n//       window.location.host +\n//       window.location.pathname;\n//     window.history.pushState('', '', newurl);\n//   } else {\n//     newurl = window.location.protocol + '//' + window.location.host;\n//     window.history.pushState('', '', newurl);\n//   }\n// }\n\n// const getToken = async (code) => {\n//   /**\n//    * Takes an access code and sends it to the Google API to exchange for an access token\n//    */\n//   const encodeCode = encodeURIComponent(code);\n//   const { access_token } = await fetch(\n//     `https://hv2altwv0j.execute-api.us-east-1.amazonaws.com/dev/api/token/${encodeCode}`\n//   )\n//     .then((res) => {\n//       return res.json();\n//     })\n//     .catch((error) => error);\n\n//     access_token && localStorage.setItem('access_token', access_token);\n\n//     return access_token;\n// }\n\n// export const getEvents = async () => {\n//   /**\n//    * We use the mock data when we are testing on localhost,\n//    * but we use the real API data when we are live.\n//    */\n//   NProgress.start(); //This is a loading bar libray\n\n//   //Return mock data while testing\n//   if (window.location.href.startsWith('http://localhost')) {\n//     NProgress.done();\n//     return mockData;\n//   } \n\n//   const token = await getAccessToken();\n\n//   if (token) {\n//     removeQuery(); //remove the code from the url once we are done with it\n//     const url = `https://hv2altwv0j.execute-api.us-east-1.amazonaws.com/dev/api/get-calendar-events/${token}`;\n//     const result = await axios.get(url);\n//     if (result.data) {\n//       var locations = extractLocations(result.data.events);\n//       localStorage.setItem('lastEvents', JSON.stringify(result.data));\n//       localStorage.setItem('locations', JSON.stringify(locations));\n//     }\n//     NProgress.done();\n//     return result.data.events;\n//   }\n\n// };\n\n// export const getAccessToken = async () => {\n//   /* Step 1 is to check and see if the user already has a valid access token */\n//   const accessToken = localStorage.getItem('access_token');\n//   const tokenCheck = accessToken && (await checkToken(accessToken));\n\n//   /* If there is no valid access token, we need to get one */\n//   if (!accessToken || tokenCheck.error) {\n//     await localStorage.removeItem('access_token');\n//     const searchParams = new URLSearchParams(window.location.search);\n//     /* There is no valid access token, but we can check for a valid code */\n//     const code = await searchParams.get('code');\n//     if (!code) {\n//       /* There is no code, so redirect to my getAuthUrl endpoint */\n//       const results = await axios.get(\n//         \"https://hv2altwv0j.execute-api.us-east-1.amazonaws.com/dev/api/get-auth-url\"\n//       );\n//       const { authUrl } = results.data;\n//       return (window.location.href = authUrl);\n//     }\n//     return code && getToken(code);\n//   }\n//   return accessToken;\n// }\n\n","import React, { Component } from 'react';\nimport './App.css';\nimport './nprogress.css';\nimport EventList from './EventList';\nimport CitySearch from './CitySearch';\nimport NumberOfEvents from './NumberOfEvents';\nimport { extractLocations, getEvents } from './api';\n\nclass App extends Component {\n\n  state = {\n    events: [],\n    locations: [],\n    numberOfEvents: 30,\n    currentLocation: 'all'\n  }\n\n  async componentDidMount() {\n    const { numberOfEvents } = this.state;\n    this.mounted = true;\n    getEvents().then((events) => {\n      if (this.mounted) {\n        this.setState({\n          events: events.slice(0, numberOfEvents),\n          locations: extractLocations(events) });\n      }\n    });\n  }\n\n  componentWillUnmount(){\n    this.mounted = false;\n  }\n\n  updateEvents = (location, numberOfEvents) => {\n    getEvents().then((events) => {\n      const locationEvents = (location === 'all') ?\n        events :\n        events.filter((event) => event.location === location);\n      this.setState({\n        events: locationEvents.slice(0, this.state.numberOfEvents),\n      });\n    });\n  }\n  \n  \n  setNumber = (e) => {\n    const newNumber = parseInt(e.target.value);\n    this.setState({\n      numberOfEvents: newNumber\n    })\n    this.updateEvents(this.state.currentLocation, this.state.numberOfEvents);\n    console.log('target value', e.target.value);\n  }\n\n  render() {\n    console.log(this.state);\n\n    return (\n      <div className=\"App\">\n        <CitySearch locations={this.state.locations} updateEvents={this.updateEvents} />\n        <NumberOfEvents numberOfEvents={this.state.numberOfEvents} setNumber={this.setNumber}/>\n        <EventList events={this.state.events}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\nimport * as atatus from 'atatus-spa';\natatus.config('5daf933ec5084b55a2381180197b6dc9').install();\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}